# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - ET-WebAPI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Restore
        run: dotnet restore $GITHUB_WORKSPACE/DotnetApi/
      
      - name: Build
        run: dotnet build $GITHUB_WORKSPACE/DotnetApi/ -c Release --no-restore

      - name: Publish
        run: dotnet publish $GITHUB_WORKSPACE/DotnetApi/ -c Release -o ${{env.DOTNET_ROOT}}/myapp
          
      - name: Upload api build for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp   
          
  test:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: build
    env:
      SQL_CONNECTION_STRING: "Data Source=localhost;Uid=sa;Password=MSSQL(!)OnDocker;Persist Security Info=True;"
      
    steps:
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
          
      - uses: actions/checkout@v2
        with:
          submodules: recursive
        
      - name: Run MsSQL Server
        uses: isbang/compose-action@v1.0.0
        with:
          compose-file: DotnetApi/ET.WebAPI.Api/docker-compose.integration-tests.yml

      - name: Test
        run: dotnet test DotnetApi/ --verbosity normal
            
#   migrate-sql-database:
#     runs-on: windows-latest
#     env:
#       SQL_CONNECTION_STRING: ${{ secrets.SQL_CONNECTION_STRING }}
        
#     steps:
#       - name: Set up .NET Core
#         uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: '5.0.x'
#           include-prerelease: false
          
#       - name: Checkout repository and submodules
#         uses: actions/checkout@v2
#         with:
#           submodules: recursive
          
#       - name: Build ET.WebAPI.Database project
#         run: dotnet build D:/a/Engineering-Thesis/Engineering-Thesis/DotnetApi/ET.WebAPI.Database/ -c Release
          
#       - name: Install EF Tool
#         run: |
#           dotnet new tool-manifest
#           dotnet tool install dotnet-ef
    
#       - name: Generate migration SQL script
#         run:
#           dotnet ef migrations script 
#           --project D:/a/Engineering-Thesis/Engineering-Thesis/DotnetApi/ET.WebAPI.Database/
#           --no-build 
#           --idempotent 
#           --context ApiDbContext 
#           --configuration Release 
#           --output ${{env.DOTNET_ROOT}}/sql/sql-script.sql
        
#       - name: Azure SQL Deploy
#         uses: Azure/sql-action@v1
#         with:
#           server-name: ${{ secrets.SQL_SERVER_URL }}
#           connection-string: ${{ env.SQL_CONNECTION_STRING }}
#           sql-file: ${{env.DOTNET_ROOT}}/sql/sql-script.sql

#   deploy:
#     runs-on: ubuntu-latest
#     needs: test
#     environment:
#       name: 'production'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v2
#         with:
#           name: .net-app

#       - name: Deploy to Azure Web App
#         id: deploy-to-webapp
#         uses: azure/webapps-deploy@v2
#         with:
#           app-name: 'ET-WebAPI'
#           slot-name: 'production'
#           publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}
#           package: .
